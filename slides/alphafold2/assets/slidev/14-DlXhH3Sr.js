import{o as a,c as r,k as s,q as n,s as c,A as e,e as t}from"../modules/vue-DN06qbNd.js";import{I as l}from"./default-BR0cC1Jy.js";import{am as o}from"../index-6t4Lt8i3.js";import{p,u as i,f as m}from"./context-CbxShNi4.js";import"../modules/shiki-PlZ7Irjf.js";const u=t("h2",null,"Recycling",-1),_=t("p",null,"把编码器的输出和解码器的输出通过回收机制传回编码器的输入",-1),d=t("ul",null,[t("li",null,"类似RNN，但是这里的梯度不反传, 只经过56层就可以计算梯度")],-1),h=t("p",null,[t("img",{src:"https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Research/AlphaFold/e.png",alt:"Model architecture"})],-1),v={__name:"14",setup(f){return p(o),i(),(g,x)=>(a(),r(l,n(c(e(m)(e(o),13))),{default:s(()=>[u,_,d,h]),_:1},16))}};export{v as default};
